// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: libs/schema/pkg/butler/api.proto

package butler

import (
	core "github.com/flinkcoin/mono/libs/schema/pkg/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InfoRes_InfoType int32

const (
	InfoRes_BLOCK_CONFIRM    InfoRes_InfoType = 0
	InfoRes_PAYMENT_RECEIVED InfoRes_InfoType = 1
	InfoRes_PAYMENT_REQUEST  InfoRes_InfoType = 2
)

// Enum value maps for InfoRes_InfoType.
var (
	InfoRes_InfoType_name = map[int32]string{
		0: "BLOCK_CONFIRM",
		1: "PAYMENT_RECEIVED",
		2: "PAYMENT_REQUEST",
	}
	InfoRes_InfoType_value = map[string]int32{
		"BLOCK_CONFIRM":    0,
		"PAYMENT_RECEIVED": 1,
		"PAYMENT_REQUEST":  2,
	}
)

func (x InfoRes_InfoType) Enum() *InfoRes_InfoType {
	p := new(InfoRes_InfoType)
	*p = x
	return p
}

func (x InfoRes_InfoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfoRes_InfoType) Descriptor() protoreflect.EnumDescriptor {
	return file_libs_schema_pkg_butler_api_proto_enumTypes[0].Descriptor()
}

func (InfoRes_InfoType) Type() protoreflect.EnumType {
	return &file_libs_schema_pkg_butler_api_proto_enumTypes[0]
}

func (x InfoRes_InfoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfoRes_InfoType.Descriptor instead.
func (InfoRes_InfoType) EnumDescriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{15, 0}
}

type PaymentTransactionReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PaymentRequest *core.PaymentRequest   `protobuf:"bytes,1,opt,name=paymentRequest,proto3" json:"paymentRequest,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PaymentTransactionReq) Reset() {
	*x = PaymentTransactionReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTransactionReq) ProtoMessage() {}

func (x *PaymentTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTransactionReq.ProtoReflect.Descriptor instead.
func (*PaymentTransactionReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentTransactionReq) GetPaymentRequest() *core.PaymentRequest {
	if x != nil {
		return x.PaymentRequest
	}
	return nil
}

type PaymentTransactionRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentTransactionRes) Reset() {
	*x = PaymentTransactionRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentTransactionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTransactionRes) ProtoMessage() {}

func (x *PaymentTransactionRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTransactionRes.ProtoReflect.Descriptor instead.
func (*PaymentTransactionRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentTransactionRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TransactionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *core.Block            `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionReq) GetBlock() *core.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type TransactionRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionRes) Reset() {
	*x = TransactionRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRes) ProtoMessage() {}

func (x *TransactionRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRes.ProtoReflect.Descriptor instead.
func (*TransactionRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListBlockReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     []byte                 `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Num           int32                  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBlockReq) Reset() {
	*x = ListBlockReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockReq) ProtoMessage() {}

func (x *ListBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockReq.ProtoReflect.Descriptor instead.
func (*ListBlockReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListBlockReq) GetAccountId() []byte {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *ListBlockReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ListBlockRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         []*core.Block          `protobuf:"bytes,1,rep,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBlockRes) Reset() {
	*x = ListBlockRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockRes) ProtoMessage() {}

func (x *ListBlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockRes.ProtoReflect.Descriptor instead.
func (*ListBlockRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListBlockRes) GetBlock() []*core.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type ListUnclaimedBlockReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     []byte                 `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Num           int32                  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUnclaimedBlockReq) Reset() {
	*x = ListUnclaimedBlockReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUnclaimedBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnclaimedBlockReq) ProtoMessage() {}

func (x *ListUnclaimedBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnclaimedBlockReq.ProtoReflect.Descriptor instead.
func (*ListUnclaimedBlockReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListUnclaimedBlockReq) GetAccountId() []byte {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *ListUnclaimedBlockReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ListUnclaimedBlockRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         []*core.Block          `protobuf:"bytes,1,rep,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUnclaimedBlockRes) Reset() {
	*x = ListUnclaimedBlockRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUnclaimedBlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnclaimedBlockRes) ProtoMessage() {}

func (x *ListUnclaimedBlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnclaimedBlockRes.ProtoReflect.Descriptor instead.
func (*ListUnclaimedBlockRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{7}
}

func (x *ListUnclaimedBlockRes) GetBlock() []*core.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type LastBlockReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     []byte                 `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LastBlockReq) Reset() {
	*x = LastBlockReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastBlockReq) ProtoMessage() {}

func (x *LastBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastBlockReq.ProtoReflect.Descriptor instead.
func (*LastBlockReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{8}
}

func (x *LastBlockReq) GetAccountId() []byte {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type LastBlockRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *core.Block            `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LastBlockRes) Reset() {
	*x = LastBlockRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastBlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastBlockRes) ProtoMessage() {}

func (x *LastBlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastBlockRes.ProtoReflect.Descriptor instead.
func (*LastBlockRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{9}
}

func (x *LastBlockRes) GetBlock() *core.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetBlockReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     []byte                 `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockReq) Reset() {
	*x = GetBlockReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockReq) ProtoMessage() {}

func (x *GetBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockReq.ProtoReflect.Descriptor instead.
func (*GetBlockReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetBlockReq) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type GetBlockRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *core.Block            `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockRes) Reset() {
	*x = GetBlockRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRes) ProtoMessage() {}

func (x *GetBlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRes.ProtoReflect.Descriptor instead.
func (*GetBlockRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetBlockRes) GetBlock() *core.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type AccountCountReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountCountReq) Reset() {
	*x = AccountCountReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCountReq) ProtoMessage() {}

func (x *AccountCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCountReq.ProtoReflect.Descriptor instead.
func (*AccountCountReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{12}
}

func (x *AccountCountReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AccountCountRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountCountRes) Reset() {
	*x = AccountCountRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountCountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCountRes) ProtoMessage() {}

func (x *AccountCountRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCountRes.ProtoReflect.Descriptor instead.
func (*AccountCountRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{13}
}

func (x *AccountCountRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type InfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoReq) Reset() {
	*x = InfoReq{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoReq) ProtoMessage() {}

func (x *InfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoReq.ProtoReflect.Descriptor instead.
func (*InfoReq) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{14}
}

func (x *InfoReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type InfoRes struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	InfoType        InfoRes_InfoType         `protobuf:"varint,1,opt,name=infoType,proto3,enum=flinkcoin.butler.InfoRes_InfoType" json:"infoType,omitempty"`
	AccountId       []byte                   `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	BlockConfirm    *InfoRes_BlockConfirm    `protobuf:"bytes,3,opt,name=blockConfirm,proto3" json:"blockConfirm,omitempty"`
	PaymentReceived *InfoRes_PaymentReceived `protobuf:"bytes,4,opt,name=paymentReceived,proto3" json:"paymentReceived,omitempty"`
	PaymentRequest  *core.PaymentRequest     `protobuf:"bytes,5,opt,name=paymentRequest,proto3" json:"paymentRequest,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InfoRes) Reset() {
	*x = InfoRes{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRes) ProtoMessage() {}

func (x *InfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRes.ProtoReflect.Descriptor instead.
func (*InfoRes) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{15}
}

func (x *InfoRes) GetInfoType() InfoRes_InfoType {
	if x != nil {
		return x.InfoType
	}
	return InfoRes_BLOCK_CONFIRM
}

func (x *InfoRes) GetAccountId() []byte {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *InfoRes) GetBlockConfirm() *InfoRes_BlockConfirm {
	if x != nil {
		return x.BlockConfirm
	}
	return nil
}

func (x *InfoRes) GetPaymentReceived() *InfoRes_PaymentReceived {
	if x != nil {
		return x.PaymentReceived
	}
	return nil
}

func (x *InfoRes) GetPaymentRequest() *core.PaymentRequest {
	if x != nil {
		return x.PaymentRequest
	}
	return nil
}

type InfoRes_BlockConfirm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     []byte                 `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRes_BlockConfirm) Reset() {
	*x = InfoRes_BlockConfirm{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRes_BlockConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRes_BlockConfirm) ProtoMessage() {}

func (x *InfoRes_BlockConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRes_BlockConfirm.ProtoReflect.Descriptor instead.
func (*InfoRes_BlockConfirm) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{15, 0}
}

func (x *InfoRes_BlockConfirm) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type InfoRes_PaymentReceived struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     []byte                 `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRes_PaymentReceived) Reset() {
	*x = InfoRes_PaymentReceived{}
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRes_PaymentReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRes_PaymentReceived) ProtoMessage() {}

func (x *InfoRes_PaymentReceived) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_butler_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRes_PaymentReceived.ProtoReflect.Descriptor instead.
func (*InfoRes_PaymentReceived) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_butler_api_proto_rawDescGZIP(), []int{15, 1}
}

func (x *InfoRes_PaymentReceived) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

var File_libs_schema_pkg_butler_api_proto protoreflect.FileDescriptor

var file_libs_schema_pkg_butler_api_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75,
	0x74, 0x6c, 0x65, 0x72, 0x1a, 0x1f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x46,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x0e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69,
	0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x2a, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x22, 0x3b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x47, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x44, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x22, 0x2c, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b,
	0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x2b, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x27, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x27, 0x0a,
	0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x19, 0x0a, 0x07, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xf9, 0x03, 0x0a, 0x07, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c,
	0x65, 0x72, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75,
	0x74, 0x6c, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x53, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74,
	0x6c, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x1a, 0x2f, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x48, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x32, 0xb2, 0x05,
	0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x48, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x2e, 0x66,
	0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x66, 0x6c,
	0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x66,
	0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x51,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e,
	0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c,
	0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x53, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x21, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74,
	0x6c, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75,
	0x74, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75,
	0x74, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x12, 0x67, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75,
	0x74, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x6c, 0x69,
	0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x30, 0x01, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x2f,
	0x6c, 0x69, 0x62, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x62, 0x75, 0x74, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_libs_schema_pkg_butler_api_proto_rawDescOnce sync.Once
	file_libs_schema_pkg_butler_api_proto_rawDescData []byte
)

func file_libs_schema_pkg_butler_api_proto_rawDescGZIP() []byte {
	file_libs_schema_pkg_butler_api_proto_rawDescOnce.Do(func() {
		file_libs_schema_pkg_butler_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_libs_schema_pkg_butler_api_proto_rawDesc), len(file_libs_schema_pkg_butler_api_proto_rawDesc)))
	})
	return file_libs_schema_pkg_butler_api_proto_rawDescData
}

var file_libs_schema_pkg_butler_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_libs_schema_pkg_butler_api_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_libs_schema_pkg_butler_api_proto_goTypes = []any{
	(InfoRes_InfoType)(0),           // 0: flinkcoin.butler.InfoRes.InfoType
	(*PaymentTransactionReq)(nil),   // 1: flinkcoin.butler.PaymentTransactionReq
	(*PaymentTransactionRes)(nil),   // 2: flinkcoin.butler.PaymentTransactionRes
	(*TransactionReq)(nil),          // 3: flinkcoin.butler.TransactionReq
	(*TransactionRes)(nil),          // 4: flinkcoin.butler.TransactionRes
	(*ListBlockReq)(nil),            // 5: flinkcoin.butler.ListBlockReq
	(*ListBlockRes)(nil),            // 6: flinkcoin.butler.ListBlockRes
	(*ListUnclaimedBlockReq)(nil),   // 7: flinkcoin.butler.ListUnclaimedBlockReq
	(*ListUnclaimedBlockRes)(nil),   // 8: flinkcoin.butler.ListUnclaimedBlockRes
	(*LastBlockReq)(nil),            // 9: flinkcoin.butler.LastBlockReq
	(*LastBlockRes)(nil),            // 10: flinkcoin.butler.LastBlockRes
	(*GetBlockReq)(nil),             // 11: flinkcoin.butler.GetBlockReq
	(*GetBlockRes)(nil),             // 12: flinkcoin.butler.GetBlockRes
	(*AccountCountReq)(nil),         // 13: flinkcoin.butler.AccountCountReq
	(*AccountCountRes)(nil),         // 14: flinkcoin.butler.AccountCountRes
	(*InfoReq)(nil),                 // 15: flinkcoin.butler.InfoReq
	(*InfoRes)(nil),                 // 16: flinkcoin.butler.InfoRes
	(*InfoRes_BlockConfirm)(nil),    // 17: flinkcoin.butler.InfoRes.BlockConfirm
	(*InfoRes_PaymentReceived)(nil), // 18: flinkcoin.butler.InfoRes.PaymentReceived
	(*core.PaymentRequest)(nil),     // 19: flinkcoin.core.PaymentRequest
	(*core.Block)(nil),              // 20: flinkcoin.core.Block
}
var file_libs_schema_pkg_butler_api_proto_depIdxs = []int32{
	19, // 0: flinkcoin.butler.PaymentTransactionReq.paymentRequest:type_name -> flinkcoin.core.PaymentRequest
	20, // 1: flinkcoin.butler.TransactionReq.block:type_name -> flinkcoin.core.Block
	20, // 2: flinkcoin.butler.ListBlockRes.block:type_name -> flinkcoin.core.Block
	20, // 3: flinkcoin.butler.ListUnclaimedBlockRes.block:type_name -> flinkcoin.core.Block
	20, // 4: flinkcoin.butler.LastBlockRes.block:type_name -> flinkcoin.core.Block
	20, // 5: flinkcoin.butler.GetBlockRes.block:type_name -> flinkcoin.core.Block
	0,  // 6: flinkcoin.butler.InfoRes.infoType:type_name -> flinkcoin.butler.InfoRes.InfoType
	17, // 7: flinkcoin.butler.InfoRes.blockConfirm:type_name -> flinkcoin.butler.InfoRes.BlockConfirm
	18, // 8: flinkcoin.butler.InfoRes.paymentReceived:type_name -> flinkcoin.butler.InfoRes.PaymentReceived
	19, // 9: flinkcoin.butler.InfoRes.paymentRequest:type_name -> flinkcoin.core.PaymentRequest
	11, // 10: flinkcoin.butler.AccountService.getBlock:input_type -> flinkcoin.butler.GetBlockReq
	1,  // 11: flinkcoin.butler.AccountService.paymentRequest:input_type -> flinkcoin.butler.PaymentTransactionReq
	3,  // 12: flinkcoin.butler.AccountService.transaction:input_type -> flinkcoin.butler.TransactionReq
	13, // 13: flinkcoin.butler.AccountService.numAccounts:input_type -> flinkcoin.butler.AccountCountReq
	5,  // 14: flinkcoin.butler.AccountService.listBlocks:input_type -> flinkcoin.butler.ListBlockReq
	9,  // 15: flinkcoin.butler.AccountService.lastBlock:input_type -> flinkcoin.butler.LastBlockReq
	7,  // 16: flinkcoin.butler.AccountService.listUnclaimedBlocks:input_type -> flinkcoin.butler.ListUnclaimedBlockReq
	15, // 17: flinkcoin.butler.AccountService.receiveInfos:input_type -> flinkcoin.butler.InfoReq
	12, // 18: flinkcoin.butler.AccountService.getBlock:output_type -> flinkcoin.butler.GetBlockRes
	2,  // 19: flinkcoin.butler.AccountService.paymentRequest:output_type -> flinkcoin.butler.PaymentTransactionRes
	4,  // 20: flinkcoin.butler.AccountService.transaction:output_type -> flinkcoin.butler.TransactionRes
	14, // 21: flinkcoin.butler.AccountService.numAccounts:output_type -> flinkcoin.butler.AccountCountRes
	6,  // 22: flinkcoin.butler.AccountService.listBlocks:output_type -> flinkcoin.butler.ListBlockRes
	10, // 23: flinkcoin.butler.AccountService.lastBlock:output_type -> flinkcoin.butler.LastBlockRes
	8,  // 24: flinkcoin.butler.AccountService.listUnclaimedBlocks:output_type -> flinkcoin.butler.ListUnclaimedBlockRes
	16, // 25: flinkcoin.butler.AccountService.receiveInfos:output_type -> flinkcoin.butler.InfoRes
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_libs_schema_pkg_butler_api_proto_init() }
func file_libs_schema_pkg_butler_api_proto_init() {
	if File_libs_schema_pkg_butler_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_libs_schema_pkg_butler_api_proto_rawDesc), len(file_libs_schema_pkg_butler_api_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_libs_schema_pkg_butler_api_proto_goTypes,
		DependencyIndexes: file_libs_schema_pkg_butler_api_proto_depIdxs,
		EnumInfos:         file_libs_schema_pkg_butler_api_proto_enumTypes,
		MessageInfos:      file_libs_schema_pkg_butler_api_proto_msgTypes,
	}.Build()
	File_libs_schema_pkg_butler_api_proto = out.File
	file_libs_schema_pkg_butler_api_proto_goTypes = nil
	file_libs_schema_pkg_butler_api_proto_depIdxs = nil
}
